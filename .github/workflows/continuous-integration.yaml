name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  #
  # CODE VULNERABILITIES
  #
  codeql:
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [python]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1


  #
  # SPELLCHECKING AND TYPOS
  #
  spellcheck:
    name: Spellchecking (markdown)
    runs-on: ubuntu-latest
    env:
      PYTHON: 3.9.6
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON }}
      - uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.5
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-${{ env.PYTHON}}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Aspell
        run: |
          sudo apt-get install aspell aspell-en
      - name: Poetry Install
        run: poetry install
      - name: Check spelling
        run: poetry run pyspelling

  #
  # TEST SUITE
  #
  test:
    name: Test Suite & Coverage (>98%)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python: ["3.8", "3.9"]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.5
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-${{ matrix.python }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry install
      - name: Unit tests
        run: |
          poetry run pytest --cov=solutions --cov-fail-under=98 --cov-report=xml tests/
